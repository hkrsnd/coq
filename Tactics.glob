DIGEST d842809a13b8c1610b75e006c2688c85
FTactics
R612:615 Poly <> <> lib
prf 891:896 <> silly1
R918:920 Coq.Init.Datatypes <> nat ind
R934:943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R957:965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R971:973 Coq.Init.Logic <> :type_scope:x_'='_x not
R966:966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R968:968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R970:970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R969:969 Tactics <> o var
R967:967 Tactics <> n var
R974:974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R976:976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R978:978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R977:977 Tactics <> p var
R975:975 Tactics <> m var
R949:951 Coq.Init.Logic <> :type_scope:x_'='_x not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R948:948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R947:947 Tactics <> o var
R945:945 Tactics <> n var
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Tactics <> p var
R953:953 Tactics <> n var
R930:932 Coq.Init.Logic <> :type_scope:x_'='_x not
R929:929 Tactics <> n var
R933:933 Tactics <> m var
prf 1502:1507 <> silly2
R1529:1531 Coq.Init.Datatypes <> nat ind
R1545:1554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1555:1555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1598:1607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1613:1615 Coq.Init.Logic <> :type_scope:x_'='_x not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1612:1612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Tactics <> o var
R1609:1609 Tactics <> n var
R1616:1616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1620:1620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Tactics <> p var
R1617:1617 Tactics <> m var
R1570:1572 Coq.Init.Datatypes <> nat ind
R1581:1584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1590:1592 Coq.Init.Logic <> :type_scope:x_'='_x not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1589:1589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Tactics <> o var
R1586:1586 Tactics <> q var
R1593:1593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1597:1597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Tactics <> p var
R1594:1594 Tactics <> r var
R1577:1579 Coq.Init.Logic <> :type_scope:x_'='_x not
R1576:1576 Tactics <> q var
R1580:1580 Tactics <> r var
R1541:1543 Coq.Init.Logic <> :type_scope:x_'='_x not
R1540:1540 Tactics <> n var
R1544:1544 Tactics <> m var
prf 2287:2293 <> silly2a
R2311:2313 Coq.Init.Datatypes <> nat ind
R2335:2344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2345:2345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2392:2401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2405:2407 Coq.Init.Logic <> :type_scope:x_'='_x not
R2402:2402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2404:2404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Tactics <> n var
R2408:2408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2410:2410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Tactics <> m var
R2360:2362 Coq.Init.Datatypes <> nat ind
R2379:2382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2386:2388 Coq.Init.Logic <> :type_scope:x_'='_x not
R2383:2383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2385:2385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Tactics <> q var
R2389:2389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Tactics <> r var
R2371:2373 Coq.Init.Logic <> :type_scope:x_'='_x not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2368:2368 Poly <> ::'('_x_','_x_')' not
R2370:2370 Poly <> ::'('_x_','_x_')' not
R2367:2367 Tactics <> q var
R2369:2369 Tactics <> q var
R2374:2374 Poly <> ::'('_x_','_x_')' not
R2376:2376 Poly <> ::'('_x_','_x_')' not
R2378:2378 Poly <> ::'('_x_','_x_')' not
R2375:2375 Tactics <> r var
R2377:2377 Tactics <> r var
R2327:2329 Coq.Init.Logic <> :type_scope:x_'='_x not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2324:2324 Poly <> ::'('_x_','_x_')' not
R2326:2326 Poly <> ::'('_x_','_x_')' not
R2323:2323 Tactics <> n var
R2325:2325 Tactics <> n var
R2330:2330 Poly <> ::'('_x_','_x_')' not
R2332:2332 Poly <> ::'('_x_','_x_')' not
R2334:2334 Poly <> ::'('_x_','_x_')' not
R2331:2331 Tactics <> m var
R2333:2333 Tactics <> m var
prf 2593:2600 <> silly_ex
R2609:2609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2655:2664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2679:2687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2694:2696 Coq.Init.Logic <> :type_scope:x_'='_x not
R2688:2691 Basics <> oddb def
R2697:2700 Basics <> true constr
R2672:2674 Coq.Init.Logic <> :type_scope:x_'='_x not
R2665:2669 Basics <> evenb def
R2675:2678 Basics <> true constr
R2634:2637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2648:2650 Coq.Init.Logic <> :type_scope:x_'='_x not
R2638:2641 Basics <> oddb def
R2644:2644 Coq.Init.Datatypes <> S constr
R2646:2646 Tactics <> n var
R2651:2654 Basics <> true constr
R2627:2629 Coq.Init.Logic <> :type_scope:x_'='_x not
R2620:2624 Basics <> evenb def
R2626:2626 Tactics <> n var
R2630:2633 Basics <> true constr
prf 2973:2987 <> silly3_firsttry
R3003:3005 Coq.Init.Datatypes <> nat ind
R3032:3041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3061:3063 Coq.Init.Logic <> :type_scope:x_'='_x not
R3042:3048 Basics <> beq_nat def
R3051:3051 Coq.Init.Datatypes <> S constr
R3054:3054 Coq.Init.Datatypes <> S constr
R3056:3056 Tactics <> n var
R3064:3067 Basics <> true constr
R3018:3020 Coq.Init.Logic <> :type_scope:x_'='_x not
R3014:3017 Basics <> true constr
R3021:3027 Basics <> beq_nat def
R3029:3029 Tactics <> n var
prf 3621:3633 <> rev_exercise1
R3652:3655 Poly <> list ind
R3657:3659 Coq.Init.Datatypes <> nat ind
R3678:3686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3689:3691 Coq.Init.Logic <> :type_scope:x_'='_x not
R3687:3688 Tactics <> l' var
R3692:3694 Poly <> rev def
R3696:3696 Tactics <> l var
R3669:3671 Coq.Init.Logic <> :type_scope:x_'='_x not
R3668:3668 Tactics <> l var
R3672:3674 Poly <> rev def
R3676:3677 Tactics <> l' var
def 4206:4221 <> trans_eq_example
R4247:4249 Coq.Init.Datatypes <> nat ind
R4271:4279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4293:4301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4307:4309 Coq.Init.Logic <> :type_scope:x_'='_x not
R4302:4302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4304:4304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4306:4306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4305:4305 Tactics <> b var
R4303:4303 Tactics <> a var
R4310:4310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4312:4312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4314:4314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4313:4313 Tactics <> f var
R4311:4311 Tactics <> e var
R4285:4287 Coq.Init.Logic <> :type_scope:x_'='_x not
R4280:4280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4282:4282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4284:4284 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4283:4283 Tactics <> d var
R4281:4281 Tactics <> c var
R4288:4288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4290:4290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4292:4292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4291:4291 Tactics <> f var
R4289:4289 Tactics <> e var
R4263:4265 Coq.Init.Logic <> :type_scope:x_'='_x not
R4258:4258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4260:4260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4262:4262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4261:4261 Tactics <> b var
R4259:4259 Tactics <> a var
R4266:4266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4268:4268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4270:4270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4269:4269 Tactics <> d var
R4267:4267 Tactics <> c var
prf 4571:4578 <> trans_eq
R4607:4607 Tactics <> X var
R4618:4621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4627:4630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4632:4634 Coq.Init.Logic <> :type_scope:x_'='_x not
R4631:4631 Tactics <> n var
R4635:4635 Tactics <> o var
R4623:4625 Coq.Init.Logic <> :type_scope:x_'='_x not
R4622:4622 Tactics <> m var
R4626:4626 Tactics <> o var
R4614:4616 Coq.Init.Logic <> :type_scope:x_'='_x not
R4613:4613 Tactics <> n var
R4617:4617 Tactics <> m var
def 4890:4906 <> trans_eq_example'
R4932:4934 Coq.Init.Datatypes <> nat ind
R4956:4964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4978:4986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4992:4994 Coq.Init.Logic <> :type_scope:x_'='_x not
R4987:4987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4989:4989 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4991:4991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4990:4990 Tactics <> b var
R4988:4988 Tactics <> a var
R4995:4995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4997:4997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4999:4999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4998:4998 Tactics <> f var
R4996:4996 Tactics <> e var
R4970:4972 Coq.Init.Logic <> :type_scope:x_'='_x not
R4965:4965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4967:4967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4969:4969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4968:4968 Tactics <> d var
R4966:4966 Tactics <> c var
R4973:4973 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4975:4975 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4977:4977 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4976:4976 Tactics <> f var
R4974:4974 Tactics <> e var
R4948:4950 Coq.Init.Logic <> :type_scope:x_'='_x not
R4943:4943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4945:4945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4947:4947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4946:4946 Tactics <> b var
R4944:4944 Tactics <> a var
R4951:4951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4953:4953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4955:4955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4954:4954 Tactics <> d var
R4952:4952 Tactics <> c var
R5470:5470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5472:5472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5474:5474 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5452:5459 Tactics <> trans_eq thm
R5470:5470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5472:5472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5474:5474 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5452:5459 Tactics <> trans_eq thm
def 5806:5822 <> trans_eq_exercise
R5844:5846 Coq.Init.Datatypes <> nat ind
R5871:5879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5891:5899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5900:5900 Coq.Init.Logic <> :type_scope:x_'='_x not
R5906:5910 Coq.Init.Logic <> :type_scope:x_'='_x not
R5921:5921 Coq.Init.Logic <> :type_scope:x_'='_x not
R5902:5904 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5901:5901 Tactics <> n var
R5905:5905 Tactics <> p var
R5911:5918 Basics <> minustwo def
R5920:5920 Tactics <> o var
R5880:5880 Coq.Init.Logic <> :type_scope:x_'='_x not
R5886:5889 Coq.Init.Logic <> :type_scope:x_'='_x not
R5882:5884 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5881:5881 Tactics <> n var
R5885:5885 Tactics <> p var
R5890:5890 Tactics <> m var
R5856:5859 Coq.Init.Logic <> :type_scope:x_'='_x not
R5870:5870 Coq.Init.Logic <> :type_scope:x_'='_x not
R5855:5855 Tactics <> m var
R5860:5867 Basics <> minustwo def
R5869:5869 Tactics <> o var
prf 7448:7458 <> S_injective
R7476:7478 Coq.Init.Datatypes <> nat ind
R7493:7498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7500:7502 Coq.Init.Logic <> :type_scope:x_'='_x not
R7499:7499 Tactics <> n var
R7503:7503 Tactics <> m var
R7487:7489 Coq.Init.Logic <> :type_scope:x_'='_x not
R7484:7484 Coq.Init.Datatypes <> S constr
R7486:7486 Tactics <> n var
R7490:7490 Coq.Init.Datatypes <> S constr
R7492:7492 Tactics <> m var
prf 8000:8012 <> inversion_ex1
R8032:8034 Coq.Init.Datatypes <> nat ind
R8055:8060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8064:8066 Coq.Init.Logic <> :type_scope:x_'='_x not
R8061:8061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8063:8063 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8062:8062 Tactics <> n var
R8067:8067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8069:8069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8068:8068 Tactics <> m var
R8046:8048 Coq.Init.Logic <> :type_scope:x_'='_x not
R8040:8040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8042:8043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8045:8045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8044:8044 Tactics <> m var
R8041:8041 Tactics <> n var
R8049:8049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8051:8052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8054:8054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8053:8053 Tactics <> o var
R8050:8050 Tactics <> o var
prf 8228:8240 <> inversion_ex2
R8258:8260 Coq.Init.Datatypes <> nat ind
R8275:8280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8282:8284 Coq.Init.Logic <> :type_scope:x_'='_x not
R8281:8281 Tactics <> n var
R8285:8285 Tactics <> m var
R8269:8271 Coq.Init.Logic <> :type_scope:x_'='_x not
R8266:8266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8268:8268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8267:8267 Tactics <> n var
R8272:8272 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8274:8274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8273:8273 Tactics <> m var
def 8407:8419 <> inversion_ex3
R8450:8450 Tactics <> X var
R8460:8463 Poly <> list ind
R8465:8465 Tactics <> X var
R8491:8496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8512:8517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8519:8521 Coq.Init.Logic <> :type_scope:x_'='_x not
R8518:8518 Tactics <> x var
R8522:8522 Tactics <> y var
R8503:8505 Coq.Init.Logic <> :type_scope:x_'='_x not
R8498:8501 Poly <> ::x_'::'_x not
R8497:8497 Tactics <> y var
R8502:8502 Tactics <> l var
R8507:8510 Poly <> ::x_'::'_x not
R8506:8506 Tactics <> x var
R8511:8511 Tactics <> j var
R8482:8484 Coq.Init.Logic <> :type_scope:x_'='_x not
R8472:8475 Poly <> ::x_'::'_x not
R8471:8471 Tactics <> x var
R8477:8480 Poly <> ::x_'::'_x not
R8476:8476 Tactics <> y var
R8481:8481 Tactics <> l var
R8486:8489 Poly <> ::x_'::'_x not
R8485:8485 Tactics <> z var
R8490:8490 Tactics <> j var
prf 8770:8780 <> beq_nat_0_l
R8815:8818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8820:8822 Coq.Init.Logic <> :type_scope:x_'='_x not
R8819:8819 Tactics <> n var
R8808:8810 Coq.Init.Logic <> :type_scope:x_'='_x not
R8797:8803 Basics <> beq_nat def
R8807:8807 Tactics <> n var
R8811:8814 Basics <> true constr
prf 9730:9742 <> inversion_ex4
R9758:9760 Coq.Init.Datatypes <> nat ind
R9773:9778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9784:9786 Coq.Init.Logic <> :type_scope:x_'='_x not
R9780:9782 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9769:9771 Coq.Init.Logic <> :type_scope:x_'='_x not
R9766:9766 Coq.Init.Datatypes <> S constr
R9768:9768 Tactics <> n var
R9772:9772 Coq.Init.Datatypes <> O constr
prf 9848:9860 <> inversion_ex5
R9878:9880 Coq.Init.Datatypes <> nat ind
R9898:9903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9907:9909 Coq.Init.Logic <> :type_scope:x_'='_x not
R9904:9904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9906:9906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9905:9905 Tactics <> n var
R9910:9910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9912:9912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9911:9911 Tactics <> m var
R9891:9893 Coq.Init.Logic <> :type_scope:x_'='_x not
R9886:9890 Basics <> false constr
R9894:9897 Basics <> true constr
def 10424:10436 <> inversion_ex6
R10493:10493 Tactics <> X var
R10503:10506 Poly <> list ind
R10508:10508 Tactics <> X var
R10530:10535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10551:10556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10558:10560 Coq.Init.Logic <> :type_scope:x_'='_x not
R10557:10557 Tactics <> x var
R10561:10561 Tactics <> z var
R10542:10544 Coq.Init.Logic <> :type_scope:x_'='_x not
R10537:10540 Poly <> ::x_'::'_x not
R10536:10536 Tactics <> y var
R10541:10541 Tactics <> l var
R10546:10549 Poly <> ::x_'::'_x not
R10545:10545 Tactics <> z var
R10550:10550 Tactics <> j var
R10525:10527 Coq.Init.Logic <> :type_scope:x_'='_x not
R10515:10518 Poly <> ::x_'::'_x not
R10514:10514 Tactics <> x var
R10520:10523 Poly <> ::x_'::'_x not
R10519:10519 Tactics <> y var
R10524:10524 Tactics <> l var
R10528:10529 Poly <> ::'['_']' not
prf 11715:11721 <> f_equal
R11750:11753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11754:11754 Tactics <> B var
R11749:11749 Tactics <> A var
R11763:11763 Tactics <> A var
R11774:11777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11781:11783 Coq.Init.Logic <> :type_scope:x_'='_x not
R11778:11778 Tactics <> f var
R11780:11780 Tactics <> x var
R11784:11784 Tactics <> f var
R11786:11786 Tactics <> y var
R11770:11772 Coq.Init.Logic <> :type_scope:x_'='_x not
R11769:11769 Tactics <> x var
R11773:11773 Tactics <> y var
prf 12289:12293 <> S_inj
R12311:12313 Coq.Init.Datatypes <> nat ind
R12321:12324 Basics <> bool ind
R12356:12365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12377:12379 Coq.Init.Logic <> :type_scope:x_'='_x not
R12366:12372 Basics <> beq_nat def
R12376:12376 Tactics <> m var
R12374:12374 Tactics <> n var
R12380:12380 Tactics <> b var
R12352:12354 Coq.Init.Logic <> :type_scope:x_'='_x not
R12333:12339 Basics <> beq_nat def
R12348:12348 Coq.Init.Datatypes <> S constr
R12350:12350 Tactics <> m var
R12342:12342 Coq.Init.Datatypes <> S constr
R12344:12344 Tactics <> n var
R12355:12355 Tactics <> b var
prf 13218:13224 <> silly3'
R13240:13242 Coq.Init.Datatypes <> nat ind
R13248:13248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13297:13303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13322:13328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13333:13335 Coq.Init.Logic <> :type_scope:x_'='_x not
R13329:13332 Basics <> true constr
R13336:13342 Basics <> beq_nat def
R13345:13345 Coq.Init.Datatypes <> S constr
R13348:13348 Coq.Init.Datatypes <> S constr
R13350:13350 Tactics <> n var
R13308:13310 Coq.Init.Logic <> :type_scope:x_'='_x not
R13304:13307 Basics <> true constr
R13311:13317 Basics <> beq_nat def
R13319:13319 Tactics <> n var
R13267:13270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13290:13292 Coq.Init.Logic <> :type_scope:x_'='_x not
R13271:13277 Basics <> beq_nat def
R13280:13280 Coq.Init.Datatypes <> S constr
R13283:13283 Coq.Init.Datatypes <> S constr
R13285:13285 Tactics <> n var
R13293:13296 Basics <> true constr
R13260:13262 Coq.Init.Logic <> :type_scope:x_'='_x not
R13249:13255 Basics <> beq_nat def
R13257:13257 Tactics <> n var
R13263:13266 Basics <> true constr
prf 14232:14249 <> plus_n_n_injective
R14283:14291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14293:14295 Coq.Init.Logic <> :type_scope:x_'='_x not
R14292:14292 Tactics <> n var
R14296:14296 Tactics <> m var
R14275:14277 Coq.Init.Logic <> :type_scope:x_'='_x not
R14271:14273 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14270:14270 Tactics <> n var
R14274:14274 Tactics <> n var
R14279:14281 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14278:14278 Tactics <> m var
R14282:14282 Tactics <> m var
prf 15280:15302 <> double_injective_FAILED
R15342:15350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15352:15354 Coq.Init.Logic <> :type_scope:x_'='_x not
R15351:15351 Tactics <> n var
R15355:15355 Tactics <> m var
R15331:15333 Coq.Init.Logic <> :type_scope:x_'='_x not
R15323:15328 Induction <> double def
R15330:15330 Tactics <> n var
R15334:15339 Induction <> double def
R15341:15341 Tactics <> m var
R15635:15641 Tactics <> f_equal thm
R15635:15641 Tactics <> f_equal thm
prf 17877:17892 <> double_injective
R17932:17940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17942:17944 Coq.Init.Logic <> :type_scope:x_'='_x not
R17941:17941 Tactics <> n var
R17945:17945 Tactics <> m var
R17921:17923 Coq.Init.Logic <> :type_scope:x_'='_x not
R17913:17918 Induction <> double def
R17920:17920 Tactics <> n var
R17924:17929 Induction <> double def
R17931:17931 Tactics <> m var
R18818:18824 Tactics <> f_equal thm
R18818:18824 Tactics <> f_equal thm
prf 19725:19736 <> beq_nat_true
R19774:19777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19779:19781 Coq.Init.Logic <> :type_scope:x_'='_x not
R19778:19778 Tactics <> n var
R19782:19782 Tactics <> m var
R19767:19769 Coq.Init.Logic <> :type_scope:x_'='_x not
R19756:19762 Basics <> beq_nat def
R19766:19766 Tactics <> m var
R19764:19764 Tactics <> n var
R19770:19773 Basics <> true constr
prf 20357:20385 <> double_injective_take2_FAILED
R20425:20433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20435:20437 Coq.Init.Logic <> :type_scope:x_'='_x not
R20434:20434 Tactics <> n var
R20438:20438 Tactics <> m var
R20414:20416 Coq.Init.Logic <> :type_scope:x_'='_x not
R20406:20411 Induction <> double def
R20413:20413 Tactics <> n var
R20417:20422 Induction <> double def
R20424:20424 Tactics <> m var
R20718:20724 Tactics <> f_equal thm
R20718:20724 Tactics <> f_equal thm
prf 21660:21681 <> double_injective_take2
R21721:21729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21731:21733 Coq.Init.Logic <> :type_scope:x_'='_x not
R21730:21730 Tactics <> n var
R21734:21734 Tactics <> m var
R21710:21712 Coq.Init.Logic <> :type_scope:x_'='_x not
R21702:21707 Induction <> double def
R21709:21709 Tactics <> n var
R21713:21718 Induction <> double def
R21720:21720 Tactics <> m var
R22197:22203 Tactics <> f_equal thm
R22197:22203 Tactics <> f_equal thm
prf 24404:24414 <> beq_id_true
R24449:24452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24454:24456 Coq.Init.Logic <> :type_scope:x_'='_x not
R24453:24453 Tactics <> x var
R24457:24457 Tactics <> y var
R24442:24444 Coq.Init.Logic <> :type_scope:x_'='_x not
R24432:24437 Lists <> beq_id def
R24441:24441 Tactics <> y var
R24439:24439 Tactics <> x var
R24445:24448 Basics <> true constr
R24518:24520 Coq.Init.Logic <> :type_scope:x_'='_x not
R24518:24520 Coq.Init.Logic <> :type_scope:x_'='_x not
R24533:24544 Tactics <> beq_nat_true prfax
R24533:24544 Tactics <> beq_nat_true prfax
prf 24702:24721 <> nth_error_after_last
R24736:24738 Coq.Init.Datatypes <> nat ind
R24757:24760 Poly <> list ind
R24762:24762 Tactics <> X var
R24783:24791 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24805:24807 Coq.Init.Logic <> :type_scope:x_'='_x not
R24792:24800 Poly <> nth_error def
R24804:24804 Tactics <> n var
R24802:24802 Tactics <> l var
R24808:24811 Poly <> None constr
R24779:24781 Coq.Init.Logic <> :type_scope:x_'='_x not
R24771:24776 Poly <> length def
R24778:24778 Tactics <> l var
R24782:24782 Tactics <> n var
def 25138:25143 <> square
R25151:25153 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25150:25150 Tactics <> n var
R25154:25154 Tactics <> n var
prf 25225:25235 <> square_mult
R25265:25267 Coq.Init.Logic <> :type_scope:x_'='_x not
R25251:25256 Tactics <> square def
R25260:25262 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25259:25259 Tactics <> n var
R25263:25263 Tactics <> m var
R25276:25278 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25268:25273 Tactics <> square def
R25275:25275 Tactics <> n var
R25279:25284 Tactics <> square def
R25286:25286 Tactics <> m var
R25603:25608 Tactics <> square def
R25935:25944 Induction <> mult_assoc prfax
R25935:25944 Induction <> mult_assoc prfax
R25935:25944 Induction <> mult_assoc prfax
R25970:25972 Coq.Init.Logic <> :type_scope:x_'='_x not
R25966:25968 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25962:25964 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25978:25980 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25974:25976 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25970:25972 Coq.Init.Logic <> :type_scope:x_'='_x not
R25966:25968 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25962:25964 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25978:25980 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25974:25976 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25997:26005 Induction <> mult_comm prfax
R25997:26005 Induction <> mult_comm prfax
R25997:26005 Induction <> mult_comm prfax
R26014:26023 Induction <> mult_assoc prfax
R26014:26023 Induction <> mult_assoc prfax
R26049:26058 Induction <> mult_assoc prfax
R26049:26058 Induction <> mult_assoc prfax
R26049:26058 Induction <> mult_assoc prfax
def 26446:26448 <> foo
R26454:26456 Coq.Init.Datatypes <> nat ind
prf 26669:26680 <> silly_fact_1
R26703:26705 Coq.Init.Logic <> :type_scope:x_'='_x not
R26699:26701 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26694:26696 Tactics <> foo def
R26698:26698 Tactics <> m var
R26717:26719 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26706:26708 Tactics <> foo def
R26712:26714 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26711:26711 Tactics <> m var
def 26950:26952 <> bar
R26967:26967 Tactics <> x var
R26978:26978 Coq.Init.Datatypes <> O constr
R26989:26989 Coq.Init.Datatypes <> S constr
prf 27063:27081 <> silly_fact_2_FAILED
R27104:27106 Coq.Init.Logic <> :type_scope:x_'='_x not
R27100:27102 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27095:27097 Tactics <> bar def
R27099:27099 Tactics <> m var
R27118:27120 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27107:27109 Tactics <> bar def
R27113:27115 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27112:27112 Tactics <> m var
prf 28109:28120 <> silly_fact_2
R28143:28145 Coq.Init.Logic <> :type_scope:x_'='_x not
R28139:28141 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28134:28136 Tactics <> bar def
R28138:28138 Tactics <> m var
R28157:28159 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28146:28148 Tactics <> bar def
R28152:28154 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28151:28151 Tactics <> m var
prf 28507:28519 <> silly_fact_2'
R28542:28544 Coq.Init.Logic <> :type_scope:x_'='_x not
R28538:28540 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28533:28535 Tactics <> bar def
R28537:28537 Tactics <> m var
R28556:28558 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28545:28547 Tactics <> bar def
R28551:28553 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28550:28550 Tactics <> m var
R28590:28592 Tactics <> bar def
def 29236:29243 <> sillyfun
R29250:29252 Coq.Init.Datatypes <> nat ind
R29257:29260 Basics <> bool ind
R29270:29276 Basics <> beq_nat def
R29278:29278 Tactics <> n var
R29303:29309 Basics <> beq_nat def
R29311:29311 Tactics <> n var
R29333:29337 Basics <> false constr
R29320:29324 Basics <> false constr
R29287:29291 Basics <> false constr
prf 29349:29362 <> sillyfun_false
R29378:29380 Coq.Init.Datatypes <> nat ind
R29396:29398 Coq.Init.Logic <> :type_scope:x_'='_x not
R29386:29393 Tactics <> sillyfun def
R29395:29395 Tactics <> n var
R29399:29403 Basics <> false constr
R29432:29439 Tactics <> sillyfun def
R29454:29460 Basics <> beq_nat def
R29454:29460 Basics <> beq_nat def
R29554:29560 Basics <> beq_nat def
R29554:29560 Basics <> beq_nat def
prf 30359:30371 <> combine_split
R30391:30394 Poly <> list ind
R30398:30400 Poly <> :type_scope:x_'*'_x not
R30397:30397 Tactics <> X var
R30401:30401 Tactics <> Y var
R30432:30437 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30451:30453 Coq.Init.Logic <> :type_scope:x_'='_x not
R30438:30444 Poly <> combine def
R30449:30450 Tactics <> l2 var
R30446:30447 Tactics <> l1 var
R30454:30454 Tactics <> l var
R30421:30423 Coq.Init.Logic <> :type_scope:x_'='_x not
R30414:30418 Poly <> split prfax
R30420:30420 Tactics <> l var
R30424:30424 Poly <> ::'('_x_','_x_')' not
R30427:30428 Poly <> ::'('_x_','_x_')' not
R30431:30431 Poly <> ::'('_x_','_x_')' not
R30425:30426 Tactics <> l1 var
R30429:30430 Tactics <> l2 var
def 30758:30766 <> sillyfun1
R30773:30775 Coq.Init.Datatypes <> nat ind
R30780:30783 Basics <> bool ind
R30793:30799 Basics <> beq_nat def
R30801:30801 Tactics <> n var
R30825:30831 Basics <> beq_nat def
R30833:30833 Tactics <> n var
R30854:30858 Basics <> false constr
R30842:30845 Basics <> true constr
R30810:30813 Basics <> true constr
prf 31117:31136 <> sillyfun1_odd_FAILED
R31152:31154 Coq.Init.Datatypes <> nat ind
R31181:31189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31196:31198 Coq.Init.Logic <> :type_scope:x_'='_x not
R31190:31193 Basics <> oddb def
R31195:31195 Tactics <> n var
R31199:31202 Basics <> true constr
R31174:31176 Coq.Init.Logic <> :type_scope:x_'='_x not
R31163:31171 Tactics <> sillyfun1 def
R31173:31173 Tactics <> n var
R31177:31180 Basics <> true constr
R31234:31242 Tactics <> sillyfun1 def
R31263:31269 Basics <> beq_nat def
R31263:31269 Basics <> beq_nat def
prf 32119:32131 <> sillyfun1_odd
R32147:32149 Coq.Init.Datatypes <> nat ind
R32176:32184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32191:32193 Coq.Init.Logic <> :type_scope:x_'='_x not
R32185:32188 Basics <> oddb def
R32190:32190 Tactics <> n var
R32194:32197 Basics <> true constr
R32169:32171 Coq.Init.Logic <> :type_scope:x_'='_x not
R32158:32166 Tactics <> sillyfun1 def
R32168:32168 Tactics <> n var
R32172:32175 Basics <> true constr
R32229:32237 Tactics <> sillyfun1 def
R32258:32264 Basics <> beq_nat def
R32258:32264 Basics <> beq_nat def
R32513:32524 Tactics <> beq_nat_true prfax
R32513:32524 Tactics <> beq_nat_true prfax
R32811:32817 Basics <> beq_nat def
R32811:32817 Basics <> beq_nat def
R32877:32888 Tactics <> beq_nat_true prfax
R32877:32888 Tactics <> beq_nat_true prfax
prf 33052:33073 <> bool_fn_applied_thrice
R33095:33098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33099:33102 Basics <> bool ind
R33091:33094 Basics <> bool ind
R33110:33113 Basics <> bool ind
R33130:33132 Coq.Init.Logic <> :type_scope:x_'='_x not
R33119:33119 Tactics <> f var
R33122:33122 Tactics <> f var
R33125:33125 Tactics <> f var
R33127:33127 Tactics <> b var
R33133:33133 Tactics <> f var
R33135:33135 Tactics <> b var
prf 35446:35456 <> beq_nat_sym
R35474:35476 Coq.Init.Datatypes <> nat ind
R35493:35495 Coq.Init.Logic <> :type_scope:x_'='_x not
R35482:35488 Basics <> beq_nat def
R35492:35492 Tactics <> m var
R35490:35490 Tactics <> n var
R35496:35502 Basics <> beq_nat def
R35506:35506 Tactics <> n var
R35504:35504 Tactics <> m var
prf 35893:35905 <> beq_nat_trans
R35943:35948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35967:35972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35984:35986 Coq.Init.Logic <> :type_scope:x_'='_x not
R35973:35979 Basics <> beq_nat def
R35983:35983 Tactics <> p var
R35981:35981 Tactics <> n var
R35987:35990 Basics <> true constr
R35960:35962 Coq.Init.Logic <> :type_scope:x_'='_x not
R35949:35955 Basics <> beq_nat def
R35959:35959 Tactics <> p var
R35957:35957 Tactics <> m var
R35963:35966 Basics <> true constr
R35936:35938 Coq.Init.Logic <> :type_scope:x_'='_x not
R35925:35931 Basics <> beq_nat def
R35935:35935 Tactics <> m var
R35933:35933 Tactics <> n var
R35939:35942 Basics <> true constr
def 36736:36758 <> split_combine_statement
prf 36934:36946 <> split_combine
R36950:36972 Tactics <> split_combine_statement prfax
prf 37191:37205 <> filter_exercise
R37236:37239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37240:37243 Basics <> bool ind
R37235:37235 Tactics <> X var
R37280:37280 Tactics <> X var
R37291:37294 Poly <> list ind
R37296:37296 Tactics <> X var
R37328:37336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37343:37345 Coq.Init.Logic <> :type_scope:x_'='_x not
R37337:37340 Tactics <> test var
R37342:37342 Tactics <> x var
R37346:37349 Basics <> true constr
R37318:37320 Coq.Init.Logic <> :type_scope:x_'='_x not
R37305:37310 Poly <> filter def
R37317:37317 Tactics <> l var
R37312:37315 Tactics <> test var
R37322:37325 Poly <> ::x_'::'_x not
R37321:37321 Tactics <> x var
R37326:37327 Tactics <> lf var
